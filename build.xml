<?xml version="1.0" encoding="UTF-8"?>

<project name="joindin" default="build" basedir=".">
 <property name="apiv2source" value="src" />
 <property name="basedir" value="."/>

<target name="initialize" description="Do Some initial setup.">
    <exec command="wget https://raw.githubusercontent.com/composer/getcomposer.org/cb19f2aa3aeaa2006c0cd69a7ef011eb31463067/web/installer -O - -q | php -- --quiet" logoutput="true" checkreturn="true" />
    <exec command="sudo mv composer.phar /usr/bin/composer"/>
    <exec command="composer install"/>
</target>


 <target name="clean" description="Clean up and create artifact directories">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/logs"/>
  <delete dir="${basedir}/build/pdepend"/>

  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/logs"/>
  <mkdir dir="${basedir}/build/pdepend"/>
 </target>

 <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
  <exec command="composer test" logoutput="true" checkreturn="true" />
 </target>

 <target name="buildTasks" description="Run the phpmd, phpcs, phploc and lint tasks.">
   <phingcall target="phpcs"/>
   <phingcall target="lint"/>
 </target>

 <target name="frisby" description="Run API tests in Frisby">
     <exec command="jasmine-node --nocolor --junitreport --output ../../build/logs/frisby/ api_spec.js" 
         dir="${basedir}/tests/frisby" checkreturn="true" logoutput="true">
  </exec>
 </target>

 <target name="frisby-write" description="Run write-sensitive API tests in Frisby">
     <exec command="jasmine-node --nocolor --junitreport --output ../../build/logs/frisby/  api_write_spec.js" 
         dir="${basedir}/tests/frisby" checkreturn="true" logoutput="true">
  </exec>
 </target>

 <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
     <exec command="composer smell"/>
 </target>

 <target name="phpcs-human-summary" description="Generate human-readable Codesniffer output">
  <phpcodesniffer standard="tools/codesniffer/JoindInPSR2/">
   <fileset dir="${apiv2source}">
       <patternset>
           <include name="**/*.php"/>
           <exclude name="**/config.php" />
           <exclude name="**/database.php" />
       </patternset>
   </fileset>
   <formatter type="summary" usefile="false" />
  </phpcodesniffer>
 </target>
 
<target name="phpcs-human" description="Check codes style with PHP_CodeSniffer">
    <phpcodesniffer standard="tools/codesniffer/JoindInPSR2/">
        <fileset dir="${apiv2source}">
          <patternset>
              <include name="**/*.php"/>
              <exclude name="**/config.php" />
              <exclude name="**/database.php" />
          </patternset>
        </fileset>
        <formatter type="full" usefile="false" />
    </phpcodesniffer>
</target>

 <target name="lint" description="Run linter over the fileset">
     <exec command="composer lint" logoutput="true" checkreturn="true" />
 </target>

 <target name="build" depends="initialize,clean,buildTasks,phpunit"/>

 <target name="launch">
  <exec command="scripts/jenkinslaunch.sh" checkreturn="true" logoutput="true" />
 </target>

</project>
